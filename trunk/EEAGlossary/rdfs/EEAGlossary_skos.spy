## Script (Python) "EEAGlosary_skos.rdf"
##bind container=container
##bind context=context
##bind namespace=
##bind script=script
##bind subpath=traverse_subpath
##parameters=langcode='en',fromidx=0, toidx=10
##title=Labels and definitions
##

#load data
l_container_url = container.absolute_url()
alias_utXmlEncode = container.utXmlEncode
alias_utCleanUpStr = container.utCleanUpStr

#get the HTML request and response objects.
request = container.REQUEST
response =  request.RESPONSE

#set content type
response.setHeader('content-type', 'text/xml')

#start generating rdf content
print '<?xml version="1.0" encoding="UTF-8"?>'
print '''<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
            xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
            xmlns:skos="http://www.w3.org/2004/02/skos/core#"
            xml:lang="%s">''' % langcode

for record in container.GetElementsInfo()[int(fromidx):int(toidx)]:
 if record.meta_type=='EEA Glossary Element':
    print '<skos:Concept rdf:about="%s">' % (record.absolute_url(0))
    for language in record.get_english_names():
        print '<skos:prefLabel xml:lang="%s">%s</skos:prefLabel>' % (record.get_language_code(language), alias_utXmlEncode(record.get_translation_by_language(language)))
    myurl=record.absolute_url(1)
    synobjs=container.GlossaryCatalog(synonyms=myurl)
    if record.getDefinitionSource()!='':
        defsource=record.getDefinitionSource()
    else:
        defsource=container.title
    for syno in synobjs:
        print '<skos:altLabel xml:lang="en">%s</skos:altLabel>' % syno.name
    if record.definition != '':
        print '<skos:definition>%s [definition source: %s]</skos:definition>' % (alias_utCleanUpStr(record.definition), alias_utCleanUpStr(defsource))
    print '</skos:Concept>'
print '</rdf:RDF>'

#return stuff
return printed

